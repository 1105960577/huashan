列表的切片

list1=[1,2,3,"hello","世界"]#定义一个列表
print(type(list1[1]))
print(list1[1:3])
结果
<class 'int'>
[2, 3]

列表的添加和删除  append和remove,del.pop,insert
list1=[1,2,3,"hello","世界"]#定义一个列表

list1.append("xin")   在尾部增加
list1.remove(2)  删除
del list1[0]
list1.pop(1)
list1.insert(0,1)
print(list1)
print(len(list1)) #显示列表中数据的长度

元组   元组中的元素是不可改变的（也就是没有增删，可以查询）
list1=（1,2,3,"hello","世界"）#定义一个列表

字典 dict 
list1={"name":"张三","age":"14","hobby":"打球"}
字典的键是不允许重复的，值可以重复

集合
a={1,2,3,4}
b={2,3,4,5}
print(a-b)  #集合的差集
print(a|b)  #集合的并集
print(a&b)  #集合的交集
print(a^b)  #集合的对称差
结果
{1}
{1, 2, 3, 4, 5}
{2, 3, 4}
{1, 5}

判断语句 if.else elif
if cunkuan>100:

	print("可以买房子了")
#elif 多条件判断
elif cunkuan>50:
	print("买车")
elif cunkuan>20:
	print("旅游")
else :
	print("123")

for循环 
for 元素变量 in 序列：
  执行语句
a=0
for x in range(20,100):
	a=a+1
	print(a)

函数
def 函数命名（输入参数）：
def add(a,b,c,d): #定义一个方法/函数
	e=a+b+c+d
	return e

g=add(1,2,3,4)
print("本次相加结果为",g)
不定长参数
def addd(*args):
	summ=0
	for x in args: #x取得是args容器中的元素
		summ=summ+x
	return summ
print(addd(1,2,3))

基本网络爬虫
from urllib import request
url="http://www.baidu.com"
data=request.urlopen(url).read()
print(data.decode())

安装第三方安装包
python -m pip install --upgrade pip #安装第三方插件需要将下载插件更新
pip install pillow  #安装第三方包 （pillow为包名）

.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tool.jar







